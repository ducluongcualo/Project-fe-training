{"ast":null,"code":"var _dec, _class;\nimport axios from \"axios\";\nimport { Service } from \"typedi\";\nimport { API_HOST } from \"../environment/environment\";\nimport { USER_KEY } from \"./auth.service\";\nimport { mockData } from \"./mock\";\nimport { delay } from \"../util/date-time.util\";\n\n// import jwtDecode from 'jwt-decode';\nexport let HttpService = (_dec = Service(), _dec(_class = class HttpService {\n  constructor() {\n    this.token = void 0;\n    this.token = localStorage.getItem(USER_KEY);\n    axios.interceptors.response.use(response => {\n      // TODO: handle token;\n      return response;\n    });\n  }\n  get tokenInfo() {\n    return this.token;\n  }\n  async request(dto) {\n    const mockRequest = mockData.find(item => item.url === dto.url);\n    if (mockRequest) {\n      await delay(1);\n      const rs = mockRequest.handler(dto);\n      if (rs.data.access_token) {\n        this.token = rs.data.access_token;\n      }\n      return rs;\n    }\n    const response = await axios({\n      method: dto.method,\n      headers: {\n        Authorization: \"Bearer \" + this.token\n      },\n      baseURL: API_HOST,\n      url: dto.url,\n      data: dto.body,\n      params: dto.query\n    });\n    return response.data;\n  }\n}) || _class);","map":{"version":3,"names":["axios","Service","API_HOST","USER_KEY","mockData","delay","HttpService","constructor","token","localStorage","getItem","interceptors","response","use","tokenInfo","request","dto","mockRequest","find","item","url","rs","handler","data","access_token","method","headers","Authorization","baseURL","body","params","query"],"sources":["C:/reactjs/bnk_fe_training/base/src/services/http.service.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { Service } from \"typedi\";\r\nimport { API_HOST } from \"../environment/environment\";\r\nimport { DTO, ResponseDTO } from \"../shared/dto/base.dto\";\r\nimport { USER_KEY } from \"./auth.service\";\r\nimport { mockData } from \"./mock\";\r\nimport { delay } from \"../util/date-time.util\";\r\n\r\n// import jwtDecode from 'jwt-decode';\r\n@Service()\r\nexport class HttpService {\r\n\tprivate token: string | null;\r\n\r\n\tconstructor() {\r\n\t\tthis.token = localStorage.getItem(USER_KEY);\r\n\t\taxios.interceptors.response.use(response => {\r\n\t\t\t// TODO: handle token;\r\n\t\t\treturn response;\r\n\t\t});\r\n\t}\r\n\r\n\tpublic get tokenInfo(): string | null {\r\n\t\treturn this.token;\r\n\t}\r\n\r\n\tpublic async request<T extends DTO>(\r\n\t\tdto: T\r\n\t): Promise<ResponseDTO<InstanceType<T[\"responseClass\"]>>> {\r\n\t\tconst mockRequest = mockData.find(item => item.url === dto.url);\r\n\t\tif (mockRequest) {\r\n\t\t\tawait delay(1);\r\n\t\t\tconst rs = mockRequest.handler(dto) as ResponseDTO<InstanceType<T[\"responseClass\"]>>;\r\n\t\t\tif (rs.data.access_token) {\r\n\t\t\t\tthis.token = rs.data.access_token;\r\n\t\t\t}\r\n\t\t\treturn rs;\r\n\t\t}\r\n\r\n\t\tconst response = await axios({\r\n\t\t\tmethod: dto.method,\r\n\t\t\theaders: { Authorization: \"Bearer \" + this.token },\r\n\t\t\tbaseURL: API_HOST,\r\n\t\t\turl: dto.url,\r\n\t\t\tdata: dto.body,\r\n\t\t\tparams: dto.query,\r\n\t\t});\r\n\t\treturn response.data as ResponseDTO<InstanceType<T[\"responseClass\"]>>;\r\n\t}\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,QAAQ;AAChC,SAASC,QAAQ,QAAQ,4BAA4B;AAErD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,QAAQ,QAAQ,QAAQ;AACjC,SAASC,KAAK,QAAQ,wBAAwB;;AAE9C;AACA,WACaC,WAAW,WADvBL,OAAO,EAAE,gBAAV,MACaK,WAAW,CAAC;EAGxBC,WAAW,GAAG;IAAA,KAFNC,KAAK;IAGZ,IAAI,CAACA,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACP,QAAQ,CAAC;IAC3CH,KAAK,CAACW,YAAY,CAACC,QAAQ,CAACC,GAAG,CAACD,QAAQ,IAAI;MAC3C;MACA,OAAOA,QAAQ;IAChB,CAAC,CAAC;EACH;EAEA,IAAWE,SAAS,GAAkB;IACrC,OAAO,IAAI,CAACN,KAAK;EAClB;EAEA,MAAaO,OAAO,CACnBC,GAAM,EACmD;IACzD,MAAMC,WAAW,GAAGb,QAAQ,CAACc,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKJ,GAAG,CAACI,GAAG,CAAC;IAC/D,IAAIH,WAAW,EAAE;MAChB,MAAMZ,KAAK,CAAC,CAAC,CAAC;MACd,MAAMgB,EAAE,GAAGJ,WAAW,CAACK,OAAO,CAACN,GAAG,CAAkD;MACpF,IAAIK,EAAE,CAACE,IAAI,CAACC,YAAY,EAAE;QACzB,IAAI,CAAChB,KAAK,GAAGa,EAAE,CAACE,IAAI,CAACC,YAAY;MAClC;MACA,OAAOH,EAAE;IACV;IAEA,MAAMT,QAAQ,GAAG,MAAMZ,KAAK,CAAC;MAC5ByB,MAAM,EAAET,GAAG,CAACS,MAAM;MAClBC,OAAO,EAAE;QAAEC,aAAa,EAAE,SAAS,GAAG,IAAI,CAACnB;MAAM,CAAC;MAClDoB,OAAO,EAAE1B,QAAQ;MACjBkB,GAAG,EAAEJ,GAAG,CAACI,GAAG;MACZG,IAAI,EAAEP,GAAG,CAACa,IAAI;MACdC,MAAM,EAAEd,GAAG,CAACe;IACb,CAAC,CAAC;IACF,OAAOnB,QAAQ,CAACW,IAAI;EACrB;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}